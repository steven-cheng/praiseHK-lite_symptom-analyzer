{"ast":null,"code":"var _jsxFileName = \"/Users/stcheng/React-Cordova_Projects/praisehk_lite_symptom_analyzer/src/pages/Home.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TodayIcon from '@material-ui/icons/Today';\nimport format from 'date-fns/format';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Slider from '@material-ui/core/Slider';\nimport moreIcon from \"../img/more.svg\";\nimport plusIcon from \"../img/plus.svg\";\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from \"@material-ui/lab\";\nimport TextField from \"@material-ui/core\";\nimport Input from \"@material-ui/core/Input\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nexport default function Home() {\n  const [isOpenAddNewSymptom_dialog, set_isOpenAddNewSymptom_dialog] = useState(false);\n\n  function open_addNewSymptom_dialog() {\n    set_isOpenAddNewSymptom_dialog(true);\n  }\n\n  function close_addNewSymptom_dialog() {\n    set_isOpenAddNewSymptom_dialog(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TodayIcon, {\n    color: \"primary\",\n    style: {\n      verticalAlign: 'text-bottom'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), \" \\xA0 \", format(new Date(), 'dd MMMM yyyy')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      marginTop: '10px',\n      marginBottom: '10px'\n    },\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-block',\n      float: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, \"Wheezing\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-block',\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: moreIcon,\n    width: 24,\n    height: 24,\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 1,\n    valueLabelDisplay: \"auto\",\n    step: 0.1,\n    min: 1,\n    max: 10,\n    style: {\n      marginTop: '5px',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Card, {\n    style: {\n      marginTop: '10px',\n      marginBottom: '10px'\n    },\n    raised: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-block',\n      float: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Phlegm\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline-block',\n      float: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: moreIcon,\n    width: 24,\n    height: 24,\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Slider, {\n    defaultValue: 1,\n    valueLabelDisplay: \"auto\",\n    step: 0.2,\n    min: 1,\n    max: 20,\n    style: {\n      marginTop: '5px',\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: open_addNewSymptom_dialog,\n    style: {\n      marginTop: '40px',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: plusIcon,\n    width: 24,\n    height: 24,\n    style: {\n      verticalAlign: 'text-bottom'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), \" \\xA0\\xA0\", /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Add New Symptom\"))), /*#__PURE__*/React.createElement(Dialog, {\n    open: isOpenAddNewSymptom_dialog,\n    onClose: close_addNewSymptom_dialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Add Symptom\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"combo-box-demo\",\n    options: top100Films,\n    getOptionLabel: option => option.title,\n    style: {\n      width: 300\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Combo box\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 50\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), \"Range: \", /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    style: {\n      width: '4em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 28\n    }\n  }), \" to \", /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    style: {\n      width: '4em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 76\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 26\n    }\n  }), \"No. of Intervals: \", /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    style: {\n      width: '4em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 39\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: close_addNewSymptom_dialog,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: close_addNewSymptom_dialog,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Add\"))));\n}\nconst top100Films = [{\n  title: 'The Shawshank Redemption',\n  year: 1994\n}, {\n  title: 'The Godfather',\n  year: 1972\n}, {\n  title: 'The Godfather: Part II',\n  year: 1974\n}, {\n  title: 'The Dark Knight',\n  year: 2008\n}, {\n  title: '12 Angry Men',\n  year: 1957\n}, {\n  title: \"Schindler's List\",\n  year: 1993\n}, {\n  title: 'Pulp Fiction',\n  year: 1994\n}, {\n  title: 'The Lord of the Rings: The Return of the King',\n  year: 2003\n}, {\n  title: 'The Good, the Bad and the Ugly',\n  year: 1966\n}, {\n  title: 'Fight Club',\n  year: 1999\n}, {\n  title: 'The Lord of the Rings: The Fellowship of the Ring',\n  year: 2001\n}, {\n  title: 'Star Wars: Episode V - The Empire Strikes Back',\n  year: 1980\n}, {\n  title: 'Forrest Gump',\n  year: 1994\n}, {\n  title: 'Inception',\n  year: 2010\n}, {\n  title: 'The Lord of the Rings: The Two Towers',\n  year: 2002\n}, {\n  title: \"One Flew Over the Cuckoo's Nest\",\n  year: 1975\n}, {\n  title: 'Goodfellas',\n  year: 1990\n}, {\n  title: 'The Matrix',\n  year: 1999\n}, {\n  title: 'Seven Samurai',\n  year: 1954\n}, {\n  title: 'Star Wars: Episode IV - A New Hope',\n  year: 1977\n}, {\n  title: 'City of God',\n  year: 2002\n}, {\n  title: 'Se7en',\n  year: 1995\n}, {\n  title: 'The Silence of the Lambs',\n  year: 1991\n}, {\n  title: \"It's a Wonderful Life\",\n  year: 1946\n}, {\n  title: 'Life Is Beautiful',\n  year: 1997\n}, {\n  title: 'The Usual Suspects',\n  year: 1995\n}, {\n  title: 'Léon: The Professional',\n  year: 1994\n}, {\n  title: 'Spirited Away',\n  year: 2001\n}, {\n  title: 'Saving Private Ryan',\n  year: 1998\n}, {\n  title: 'Once Upon a Time in the West',\n  year: 1968\n}, {\n  title: 'American History X',\n  year: 1998\n}, {\n  title: 'Interstellar',\n  year: 2014\n}, {\n  title: 'Casablanca',\n  year: 1942\n}, {\n  title: 'City Lights',\n  year: 1931\n}, {\n  title: 'Psycho',\n  year: 1960\n}, {\n  title: 'The Green Mile',\n  year: 1999\n}, {\n  title: 'The Intouchables',\n  year: 2011\n}, {\n  title: 'Modern Times',\n  year: 1936\n}, {\n  title: 'Raiders of the Lost Ark',\n  year: 1981\n}, {\n  title: 'Rear Window',\n  year: 1954\n}, {\n  title: 'The Pianist',\n  year: 2002\n}, {\n  title: 'The Departed',\n  year: 2006\n}, {\n  title: 'Terminator 2: Judgment Day',\n  year: 1991\n}, {\n  title: 'Back to the Future',\n  year: 1985\n}, {\n  title: 'Whiplash',\n  year: 2014\n}, {\n  title: 'Gladiator',\n  year: 2000\n}, {\n  title: 'Memento',\n  year: 2000\n}, {\n  title: 'The Prestige',\n  year: 2006\n}, {\n  title: 'The Lion King',\n  year: 1994\n}, {\n  title: 'Apocalypse Now',\n  year: 1979\n}, {\n  title: 'Alien',\n  year: 1979\n}, {\n  title: 'Sunset Boulevard',\n  year: 1950\n}, {\n  title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb',\n  year: 1964\n}, {\n  title: 'The Great Dictator',\n  year: 1940\n}, {\n  title: 'Cinema Paradiso',\n  year: 1988\n}, {\n  title: 'The Lives of Others',\n  year: 2006\n}, {\n  title: 'Grave of the Fireflies',\n  year: 1988\n}, {\n  title: 'Paths of Glory',\n  year: 1957\n}, {\n  title: 'Django Unchained',\n  year: 2012\n}, {\n  title: 'The Shining',\n  year: 1980\n}, {\n  title: 'WALL·E',\n  year: 2008\n}, {\n  title: 'American Beauty',\n  year: 1999\n}, {\n  title: 'The Dark Knight Rises',\n  year: 2012\n}, {\n  title: 'Princess Mononoke',\n  year: 1997\n}, {\n  title: 'Aliens',\n  year: 1986\n}, {\n  title: 'Oldboy',\n  year: 2003\n}, {\n  title: 'Once Upon a Time in America',\n  year: 1984\n}, {\n  title: 'Witness for the Prosecution',\n  year: 1957\n}, {\n  title: 'Das Boot',\n  year: 1981\n}, {\n  title: 'Citizen Kane',\n  year: 1941\n}, {\n  title: 'North by Northwest',\n  year: 1959\n}, {\n  title: 'Vertigo',\n  year: 1958\n}, {\n  title: 'Star Wars: Episode VI - Return of the Jedi',\n  year: 1983\n}, {\n  title: 'Reservoir Dogs',\n  year: 1992\n}, {\n  title: 'Braveheart',\n  year: 1995\n}, {\n  title: 'M',\n  year: 1931\n}, {\n  title: 'Requiem for a Dream',\n  year: 2000\n}, {\n  title: 'Amélie',\n  year: 2001\n}, {\n  title: 'A Clockwork Orange',\n  year: 1971\n}, {\n  title: 'Like Stars on Earth',\n  year: 2007\n}, {\n  title: 'Taxi Driver',\n  year: 1976\n}, {\n  title: 'Lawrence of Arabia',\n  year: 1962\n}, {\n  title: 'Double Indemnity',\n  year: 1944\n}, {\n  title: 'Eternal Sunshine of the Spotless Mind',\n  year: 2004\n}, {\n  title: 'Amadeus',\n  year: 1984\n}, {\n  title: 'To Kill a Mockingbird',\n  year: 1962\n}, {\n  title: 'Toy Story 3',\n  year: 2010\n}, {\n  title: 'Logan',\n  year: 2017\n}, {\n  title: 'Full Metal Jacket',\n  year: 1987\n}, {\n  title: 'Dangal',\n  year: 2016\n}, {\n  title: 'The Sting',\n  year: 1973\n}, {\n  title: '2001: A Space Odyssey',\n  year: 1968\n}, {\n  title: \"Singin' in the Rain\",\n  year: 1952\n}, {\n  title: 'Toy Story',\n  year: 1995\n}, {\n  title: 'Bicycle Thieves',\n  year: 1948\n}, {\n  title: 'The Kid',\n  year: 1921\n}, {\n  title: 'Inglourious Basterds',\n  year: 2009\n}, {\n  title: 'Snatch',\n  year: 2000\n}, {\n  title: '3 Idiots',\n  year: 2009\n}, {\n  title: 'Monty Python and the Holy Grail',\n  year: 1975\n}];","map":{"version":3,"sources":["/Users/stcheng/React-Cordova_Projects/praisehk_lite_symptom_analyzer/src/pages/Home.js"],"names":["React","useState","useEffect","useRef","Typography","TodayIcon","format","Card","CardContent","Slider","Button","Autocomplete","TextField","Input","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Home","isOpenAddNewSymptom_dialog","set_isOpenAddNewSymptom_dialog","open_addNewSymptom_dialog","close_addNewSymptom_dialog","marginTop","verticalAlign","Date","marginBottom","display","float","moreIcon","cursor","clear","plusIcon","textAlign","top100Films","option","title","width","params","year"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TodayIcon from '@material-ui/icons/Today';\nimport format from 'date-fns/format';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Slider from '@material-ui/core/Slider';\nimport moreIcon from '../img/more.svg';\nimport plusIcon from '../img/plus.svg';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from \"@material-ui/lab\";\nimport TextField from \"@material-ui/core\";\nimport Input from \"@material-ui/core/Input\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nexport default function Home() {\n    const [isOpenAddNewSymptom_dialog, set_isOpenAddNewSymptom_dialog] = useState(false);\n\n    function open_addNewSymptom_dialog() {\n        set_isOpenAddNewSymptom_dialog(true);\n    }\n\n    function close_addNewSymptom_dialog() {\n        set_isOpenAddNewSymptom_dialog(false);\n    }\n\n    return (\n        <>\n            <p style={{ marginTop:'20px' }}>\n                <TodayIcon color=\"primary\" style={{verticalAlign:'text-bottom'}} /> &nbsp; {format(new Date(), 'dd MMMM yyyy')}\n            </p>\n            <div>\n                <Card style={{ marginTop:'10px', marginBottom:'10px' }} raised={true}>\n                    <CardContent>\n                        <div style={{ display:'inline-block', float:'left' }}>Wheezing</div>\n                        <div style={{ display:'inline-block', float:'right' }}>\n                            <img src={moreIcon} width={24} height={24} style={{ cursor:'pointer' }}/>\n                        </div>\n                        <Slider\n                            defaultValue={1}\n                            valueLabelDisplay=\"auto\"\n                            step={0.1}\n                            min={1}\n                            max={10}\n                            style={{ marginTop:'5px', clear:'both' }}\n                        />\n                    </CardContent>\n                </Card>\n                <Card style={{ marginTop:'10px', marginBottom:'10px' }} raised={true}>\n                    <CardContent>\n                        <div style={{ display:'inline-block', float:'left' }}>Phlegm</div>\n                        <div style={{ display:'inline-block', float:'right' }}>\n                            <img src={moreIcon} width={24} height={24} style={{ cursor:'pointer' }}/>\n                        </div>\n                        <Slider\n                            defaultValue={1}\n                            valueLabelDisplay=\"auto\"\n                            step={0.2}\n                            min={1}\n                            max={20}\n                            style={{ marginTop:'5px', clear:'both' }}\n                        />\n                    </CardContent>\n                </Card>\n                <div onClick={open_addNewSymptom_dialog} style={{marginTop:'40px', cursor:'pointer'}}>\n                    <img src={plusIcon} width={24} height={24} style={{verticalAlign:'text-bottom'}} /> &nbsp;&nbsp;\n                    <Typography variant='h6' style={{display:'inline-block'}}>Add New Symptom</Typography>\n                </div>\n            </div>\n            <Dialog open={isOpenAddNewSymptom_dialog} onClose={close_addNewSymptom_dialog} >\n                <DialogTitle style={{textAlign:'center'}}>Add Symptom</DialogTitle>\n                <DialogContent>\n                    <Autocomplete\n                        id=\"combo-box-demo\"\n                        options={top100Films}\n                        getOptionLabel={(option) => option.title}\n                        style={{ width: 300 }}\n                        renderInput={(params) => <TextField {...params} label=\"Combo box\" variant=\"outlined\" />}\n                    />\n                    Range: <Input type='number' style={{width:'4em'}}/> to <Input type='number' style={{width:'4em'}}/>\n                    <br/><br/>\n                    No. of Intervals: <Input type='number' style={{width:'4em'}}/>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={close_addNewSymptom_dialog} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={close_addNewSymptom_dialog} color=\"primary\">\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nconst top100Films = [\n    { title: 'The Shawshank Redemption', year: 1994 },\n    { title: 'The Godfather', year: 1972 },\n    { title: 'The Godfather: Part II', year: 1974 },\n    { title: 'The Dark Knight', year: 2008 },\n    { title: '12 Angry Men', year: 1957 },\n    { title: \"Schindler's List\", year: 1993 },\n    { title: 'Pulp Fiction', year: 1994 },\n    { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n    { title: 'The Good, the Bad and the Ugly', year: 1966 },\n    { title: 'Fight Club', year: 1999 },\n    { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\n    { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\n    { title: 'Forrest Gump', year: 1994 },\n    { title: 'Inception', year: 2010 },\n    { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\n    { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\n    { title: 'Goodfellas', year: 1990 },\n    { title: 'The Matrix', year: 1999 },\n    { title: 'Seven Samurai', year: 1954 },\n    { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\n    { title: 'City of God', year: 2002 },\n    { title: 'Se7en', year: 1995 },\n    { title: 'The Silence of the Lambs', year: 1991 },\n    { title: \"It's a Wonderful Life\", year: 1946 },\n    { title: 'Life Is Beautiful', year: 1997 },\n    { title: 'The Usual Suspects', year: 1995 },\n    { title: 'Léon: The Professional', year: 1994 },\n    { title: 'Spirited Away', year: 2001 },\n    { title: 'Saving Private Ryan', year: 1998 },\n    { title: 'Once Upon a Time in the West', year: 1968 },\n    { title: 'American History X', year: 1998 },\n    { title: 'Interstellar', year: 2014 },\n    { title: 'Casablanca', year: 1942 },\n    { title: 'City Lights', year: 1931 },\n    { title: 'Psycho', year: 1960 },\n    { title: 'The Green Mile', year: 1999 },\n    { title: 'The Intouchables', year: 2011 },\n    { title: 'Modern Times', year: 1936 },\n    { title: 'Raiders of the Lost Ark', year: 1981 },\n    { title: 'Rear Window', year: 1954 },\n    { title: 'The Pianist', year: 2002 },\n    { title: 'The Departed', year: 2006 },\n    { title: 'Terminator 2: Judgment Day', year: 1991 },\n    { title: 'Back to the Future', year: 1985 },\n    { title: 'Whiplash', year: 2014 },\n    { title: 'Gladiator', year: 2000 },\n    { title: 'Memento', year: 2000 },\n    { title: 'The Prestige', year: 2006 },\n    { title: 'The Lion King', year: 1994 },\n    { title: 'Apocalypse Now', year: 1979 },\n    { title: 'Alien', year: 1979 },\n    { title: 'Sunset Boulevard', year: 1950 },\n    { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\n    { title: 'The Great Dictator', year: 1940 },\n    { title: 'Cinema Paradiso', year: 1988 },\n    { title: 'The Lives of Others', year: 2006 },\n    { title: 'Grave of the Fireflies', year: 1988 },\n    { title: 'Paths of Glory', year: 1957 },\n    { title: 'Django Unchained', year: 2012 },\n    { title: 'The Shining', year: 1980 },\n    { title: 'WALL·E', year: 2008 },\n    { title: 'American Beauty', year: 1999 },\n    { title: 'The Dark Knight Rises', year: 2012 },\n    { title: 'Princess Mononoke', year: 1997 },\n    { title: 'Aliens', year: 1986 },\n    { title: 'Oldboy', year: 2003 },\n    { title: 'Once Upon a Time in America', year: 1984 },\n    { title: 'Witness for the Prosecution', year: 1957 },\n    { title: 'Das Boot', year: 1981 },\n    { title: 'Citizen Kane', year: 1941 },\n    { title: 'North by Northwest', year: 1959 },\n    { title: 'Vertigo', year: 1958 },\n    { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\n    { title: 'Reservoir Dogs', year: 1992 },\n    { title: 'Braveheart', year: 1995 },\n    { title: 'M', year: 1931 },\n    { title: 'Requiem for a Dream', year: 2000 },\n    { title: 'Amélie', year: 2001 },\n    { title: 'A Clockwork Orange', year: 1971 },\n    { title: 'Like Stars on Earth', year: 2007 },\n    { title: 'Taxi Driver', year: 1976 },\n    { title: 'Lawrence of Arabia', year: 1962 },\n    { title: 'Double Indemnity', year: 1944 },\n    { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\n    { title: 'Amadeus', year: 1984 },\n    { title: 'To Kill a Mockingbird', year: 1962 },\n    { title: 'Toy Story 3', year: 2010 },\n    { title: 'Logan', year: 2017 },\n    { title: 'Full Metal Jacket', year: 1987 },\n    { title: 'Dangal', year: 2016 },\n    { title: 'The Sting', year: 1973 },\n    { title: '2001: A Space Odyssey', year: 1968 },\n    { title: \"Singin' in the Rain\", year: 1952 },\n    { title: 'Toy Story', year: 1995 },\n    { title: 'Bicycle Thieves', year: 1948 },\n    { title: 'The Kid', year: 1921 },\n    { title: 'Inglourious Basterds', year: 2009 },\n    { title: 'Snatch', year: 2000 },\n    { title: '3 Idiots', year: 2009 },\n    { title: 'Monty Python and the Holy Grail', year: 1975 },\n];"]},"metadata":{},"sourceType":"module"}